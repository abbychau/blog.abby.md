<html>

<head>
    <title>Abby's Archive</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <base target="_blank">
    <style>
        /* for all screens */
        #info {
            display: none;
        }

        /* only when orientation is in portrait mode */
        @media all and (orientation:portrait) {
            #info {
                color: red;
                display: inline;
                font-size: 20px
            }
        }


        body {
            background-color: #2c292d;
            color: #fdf9f3;
            padding: 1em;
            margin: 0;
            font-family: consolas, monospace;
        }

        a {
            color: #a9dc76;
            cursor: pointer
        }

        .hljs {
            font-family: consolas, monospace;
        }

        img {
            max-width: 90%;
        }
    </style>
    <link rel="icon" type="image/png"
        href="https://d2v9k5u4v94ulw.cloudfront.net/assets/images/2191294/original/e01cdc83-7764-49d6-9176-4695d37133b7?1522307876" />

    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/styles/default.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/highlight.min.js"></script>

</head>

<body>
    
    <div id='article' style='padding:0 15px 10px 10px'>
        <h1 id="subject">計算器是如何實現乘法、除法、指數、對數、三角函數運算的？</h1>
        <div id="date" style='font-size: 9pt;'>2018-07-11 14:25</div>
        <div style='font-size: 9pt; border-bottom:1px solid #444; padding-bottom:1em' id="tags">答案</div>
        <div id="content" style='word-break: break-all;'><p>這條題目的技術棧跨度挺大的，我試試用最短的方法寫出來。</p><p>1937年，年僅21歲的麻省理工學院研究生<b>克勞德·夏農</b>發表了他的偉大論文《對繼電器和開關電路中的符號分析》，文中首次提及數位電子技術的應用。他向人們展示了如何使用開關來實現邏輯和數學運算。</p><p>1和0對應的是數位電子技術的1和0。在這個時間附近，還有大量的類比電腦。</p><p>我單以<b>馮·紐曼結構</b>的計算器來解答這個問題，因為這是我們日常使用的計算機結構。</p><p>這種結構中立地稱為<b>儲存程式結構</b>，也就是把一部電腦描述成四個主要部分：算術邏輯單元、控制電路、記憶體及輸入輸出裝置。</p><p>這些部件通過一組一組的排線連線，並且由一個時鐘來驅動。</p><p>當中最重要的部分是算術邏輯單元（簡稱ALU），單是這個ALU 已經可以造到<b>加減乘</b>三則混算了。</p><p>加法和減法算是同樣做法，就是一大串的加法器(full-adder)電路。如果手頭上有NAND 門的話，要動手造起來也很簡單，就是把進位加進下個加法器。</p><p><br></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-8a74f2288c2b3bae1c98cd1c2ff29bf9_720w.gif?source=3af55fa1" data-caption="" data-size="normal" data-rawwidth="220" data-rawheight="149" data-thumbnail="https://pic3.zhimg.com/v2-8a74f2288c2b3bae1c98cd1c2ff29bf9_720w.jpg?source=3af55fa1" class="content_image" width="220"></noscript><img src="data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='220'%20height='149'&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="220" data-rawheight="149" data-thumbnail="https://pic3.zhimg.com/v2-8a74f2288c2b3bae1c98cd1c2ff29bf9_720w.jpg?source=3af55fa1" class="content_image lazy" width="220" data-actualsrc="https://pic3.zhimg.com/v2-8a74f2288c2b3bae1c98cd1c2ff29bf9_720w.gif?source=3af55fa1"></figure><p><br></p><p>而乘法也很簡單，就是像我們日常的豎式計算，只要用加法器把10以來的乘數計好，把結果放到記存器，最後把部分積加起來就完了。</p><p><b>除法</b>就比較難了，可以算是計算機組織的最後boss。但具體操作也是和豎式計算一樣的，有興趣可以搜索<b>除法器</b>，中間會用到一些ALU 上的位操作。</p><p><b>指數</b>：硬算，這沒有甚麽技巧的。唯一技巧就是只保留需要的有效數字，在計算時，記存器只保留<b>有效數字內的結果</b>和<b>要保留多少個0</b>，這兩項變數。這樣可以大複減低低位數的ALU 操作，也能保持一定程度的精度。</p><p><b>對數</b>：是用<b>泰勒級數</b>展開的(IA64為例)，所以可以計算某一個指數數位。也會輔以數表加速。</p><p><b>三角函數</b>：是用<b>cordic演算法</b>，cordic演算法理論核心是利用公式旋轉向量：</p><p>X1=X0*cos(θ)-Y0*sin(θ)=cos(θ)(X0-Y0*tan(θ))</p><p>Y1=Y0*cos(θ)+X0*sin(θ)=cos(θ)(Y0+X0*tan(θ))</p><p>有了這個關系，就可以用基礎運算（不查表，指數，對數等）推出答案。</p><p><br></p><p>sin和cos 是用這兩條式進行歸遞運算的：</p><p>cos(a+b) = cos(a)cos(b) – sin(a)sin(b) = cos(a) [cos(b) – tan(a)sin(b)]</p><p>sin(a+b) = sin(a)cos(b) + cos(a)sin(b) = cos(a) [tan(a)cos(b) +sin(b)]</p><p>以達到指定有效數字。</p></div>
        <div id="permalink" style='word-break: break-all;padding:2em 0 2em 0'><a href="https://blog.abby.md/_generated_pages/answers/440064804.htm">Permalink of this blog</a></div>
        
    </div>
</body>
<script>
    $("img[data-actualsrc]").each(function(num,e){
        $(this).attr("src",$(this).actualsrc);
    });
</script>
</html>