<html>

<head>
    <title>糾結使用原生PHP還是框架?</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://blog.abby.md/style.css" />
    <link rel="icon" type="image/png"
        href="https://blog.abby.md/favicon.png" />
    

    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/styles/default.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/highlight.min.js"></script>
    <script src="/script.js"></script>
</head>

<body>
    
    <div id='article' style='padding:0 15px 10px 10px'>
        <h1 id="subject">糾結使用原生PHP還是框架?</h1>
        <div id="date" style='font-size: 9pt;'>2018-08-10 09:44</div>
        <div style='font-size: 9pt; border-bottom:1px solid #444; padding-bottom:1em' id="tags">答案</div>
        <div id="content" style='word-break: break-all;'>在使用框架前，我都會用原生先快速過一次。<br>很多時都發現router 是很常見的，controller 是很常見的，middleware 在某幾個場景都很好用的，template system 又有自己慣用的手法。工具怎麼autoload, asset 就麼放等等。。。<br><br>於是很快就設計出自己的結構。<br><br>用框架只是在合作是有一套大家都可能用過的規則而已。就算用原生，在規則建立好之後還是要傳播的。<br><br>而時間方面，如果是團隊合作，甚至要招聘的話，用一套常見又容易理解的規則只會縮短。雖然那往往不是最合適的。<br><br>框架是在你有很少或者很多時間時都不怎麼合適但又在大部分情況下都很合適的選擇。</div>
        <div id="permalink" style='word-break: break-all;padding:2em 0 2em 0'><a href="https://blog.abby.md/_generated_pages/answers/465631425.htm">Permalink of this blog</a></div>
        
    </div>
</body>
<script>
    $("img[data-actualsrc]").each(function(num,e){
        $(this).attr("src",$(this).attr("data-actualsrc"));
    });
    hljs.highlightAll();
</script>
</html>