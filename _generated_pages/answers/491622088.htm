<html>

<head>
    <title>Abby's Archive</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <base target="_blank">
    <link rel="stylesheet" href="https://blog.abby.md/style.css" />
    <link rel="icon" type="image/png"
        href="https://d2v9k5u4v94ulw.cloudfront.net/assets/images/2191294/original/e01cdc83-7764-49d6-9176-4695d37133b7?1522307876" />

    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/styles/default.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/highlight.min.js"></script>

</head>

<body>
    
    <div id='article' style='padding:0 15px 10px 10px'>
        <h1 id="subject">Rust的設計中為什麽要區分不可變變量和常量？</h1>
        <div id="date" style='font-size: 9pt;'>2018-09-14 12:37</div>
        <div style='font-size: 9pt; border-bottom:1px solid #444; padding-bottom:1em' id="tags">答案</div>
        <div id="content" style='word-break: break-all;'>語義上分別很明顯。Const 是macro。<br><br>我想說在這個編譯器可優化的項目中，到底是不是真的要引入const 這個關鍵字。<br><br>當然不是真的。Rust 只是想確定用戶理解自己在做甚麼而已。static 的lifetime 也是。<br><br>像是在不久之前，match pattern 中的lifetime 標示自動化一樣，自不自動化這個，更像是個語言設計的取向而已。<br><br>這個取向的好處自然是降低let 的學習成本的同時令語義又清淅。</div>
        <div id="permalink" style='word-break: break-all;padding:2em 0 2em 0'><a href="https://blog.abby.md/_generated_pages/answers/491622088.htm">Permalink of this blog</a></div>
        
    </div>
</body>
<script>
    $("img[data-actualsrc]").each(function(num,e){
        $(this).attr("src",$(this).attr("data-actualsrc"));
    });
    hljs.highlightAll();
</script>
</html>