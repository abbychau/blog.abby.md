<html>

<head>
    <title>node相比傳統服務端技術棧差在哪里？</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://blog.abby.md/style.css" />
    <link rel="icon" type="image/png"
        href="https://blog.abby.md/favicon.png" />
    

    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/styles/default.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/highlight.min.js"></script>
    <script src="/script.js"></script>
</head>

<body>
    
    <div id='article' style='padding:0 15px 10px 10px'>
        <h1 id="subject">node相比傳統服務端技術棧差在哪里？</h1>
        <div id="date" style='font-size: 9pt;'>2017-12-21 17:49</div>
        <div style='font-size: 9pt; border-bottom:1px solid #444; padding-bottom:1em' id="tags">答案</div>
        <div id="content" style='word-break: break-all;'>主問題是答不了的，因為題主沒有補充node 在哪點不傳統。<br><br>描述中的問題可以回答。<br>不適合計算密集主要是因為v8的結構對絕對速度上有硬性限制，寫javascript 時不可以確定hotspot，如果你要cpu 跑100圈但它只跑了50圈時，開發人員也是不能尋根究底地問為甚麼的，v8在使用full codegen 還是Crankshaft 中有絕對權力。<br><br>這的確和強弱類型有關，但也不是全部。v8 的結構十分複雜，不同語句是語言實現，匯編實現，還是宏實現，大部分情況都是向使用者透明的，像是測試要使用for , forEach , 還是map 時，會顯示出v8的抽象消耗很高。<br><br>所以在對時間要求有很高的把握度時，人們都常用c/c++或者rust 這種考慮深淺層複制和記憶指針位置的語言，而這些語言的抽象消耗都很低(rust 更宣稱無消耗)<br><br>node 的問題, 也全在於v8的問題。</div>
        <div id="permalink" style='word-break: break-all;padding:2em 0 2em 0'><a href="https://blog.abby.md/_generated_pages/answers/280692432.htm">Permalink of this blog</a></div>
        
    </div>
</body>
<script>
    $("img[data-actualsrc]").each(function(num,e){
        $(this).attr("src",$(this).attr("data-actualsrc"));
    });
    hljs.highlightAll();
</script>
</html>