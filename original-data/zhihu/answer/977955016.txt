為什麽滑鐵盧大學讓大一學生從不實用的racket語言學起而不是直接上手C語言？
<p>有關fp 和簡潔性的話就不再說了。</p><p>我們在教cs時，為的是甚麼呢? 是為了讓學生去操成計算機還是讓學生去了解計算機的邊界？</p><p>c或者大部分procedual 語言，教授時和教assembly 是沒太大分別的，重點其實在於讓學生熟練去做電腦操作，這是對一個機械操作員的教導方法，這是技校才會做的。</p><p>信息科學要成為科學，就必要讓學生了解到每個概念的邊界在何方。</p><p>而從c 或者python 改成Racket 則是把對硬件匹配的學習，改成了學習問題可解決性的邊界。</p><p>而這更乎合現今人才的需求，以前把操作當成重點是因為學習操作不容易，今天是個人都可以在網上找個動態語言開幹。而且可以由淺入深看教材，也可以直接git clone 從別人的代碼中參照調試學習。</p><p>操作上的比重反而不需要害怕學生會出現問題，尤其在排名靠前的學校中。</p><p>以數學算式（fp）開始去學習，是打好基礎和持有正確眼界的一步。很多其他pp 中的核心理念，地址變數迴圈，都是和現實妥協的產物。</p>
1579320889