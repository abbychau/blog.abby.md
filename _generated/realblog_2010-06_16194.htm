<html>

<head>
    <title>Abby's Archive</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <base target="_blank">
    <style>
        /* for all screens */
        #info {
            display: none;
        }

        /* only when orientation is in portrait mode */
        @media all and (orientation:portrait) {
            #info {
                color: red;
                display: inline;
                font-size: 20px
            }
        }
        .myblock{
            padding: 1em 0;
        }
        body {
            background-color: #2c292d;
            color: #fdf9f3;
            padding: 1em;
            margin: 0;
            font-family: consolas, monospace;
        }

        a {
            color: #a9dc76;
            cursor: pointer
        }

        .hljs {
            font-family: consolas, monospace;
        }

        img {
            max-width: 90%;
        }
    </style>
    <link rel="icon" type="image/png" href="https://d2v9k5u4v94ulw.cloudfront.net/assets/images/2191294/original/e01cdc83-7764-49d6-9176-4695d37133b7?1522307876" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/styles/default.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.0.1/highlight.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js"></script>

    <script>
        function inIframe() {
            try {
                return window.self !== window.top;
            } catch (e) {
                return true;
            }
        }

        function myMarked(str) {
            str = str.replace(/\{% youtube (.+?) %\}/g, '<iframe id="ytplayer" type="text/html" width="640" height="360" src="https://www.youtube.com/embed/$1" "frameborder="0"></iframe>');
            str = str.replace(/\{% ghcode (.+?) (.+?) (.+?) %\}/g, '$1#L$2-L$3');
            return marked(str, { gfm: true, breaks: true });
        }
        $(document).ready(function () {
            $('#content').html(myMarked($('#content').html()))
            hljs.highlightAll();

            if(!inIframe()){
                $('#homelink').show()
            }
        })
    </script>
</head>

<body>
    <div id='article' style='padding:0 15px 10px 10px'>
        <h1 id="subject">PHP 6 的新特性</h1>
        <div id="date" style='font-size: 9pt;'>2010-06-22</div>
        <div style='font-size: 9pt; border-bottom:1px solid #444; padding-bottom:1em' id="tags"><a href='/_meta/程式設計.htm'>程式設計</a></div>
        <div id="content" style='word-break: break-all;'><p>PHP的下一個版本，V6，包含了很的新特性和語法改進，會使它在面向對像方面性更易用。<br />
其他重要的特性：比如在核心函數中對Unicode （統一編碼）的支持，這意味著 PHP 6提供了更好的更可靠國際支持。</p>
<p>PHP已經很流行，被無數的站點使用，被大部分因特網接入商所支持，被Yahoo這樣的大網絡公司使用著。在即將來臨的PHP版本中準備增加一些成功的新特性，使PHP在某些場合下更易用更安全。你準備好接受 PHP 6 了嗎？如果你明天就升級了，你的程序會運行得很好嗎？你該怎麼辦？這篇文章集合了PHP 6的改變，他們中的一些備份移植到版本的PHP v5.x，您目前的腳本可能需要進行一些調整。</p>
<p>如果你現在使用不是PHP，但是一直在考慮它，考慮一下它的新特性。這些特點，從Unicode的核心支持到XML支持，使它更容易為你寫的功能填補PHP的應用。</p>
<p><strong>PHP 6 新特性</strong></p>
<p>PHP 6當前已經作為開發者快照使用，所以你可以下載和試用一下這篇文章列出很多特性，這些特性已經在當前的快照中實現了。見資源。</p>
<p><strong>改進 Unicode 支持</strong></p>
<p>在PHP的核心函數中，有很多對Unicode 字符串的支持的改進，這些新特性將產生巨大的影響因為它允許PHP為國際字符提供更多的支持。所以如果一個開發者或者架構師使用不同的語言，例如Java程序語言，是因為它具有超過PHP的國際化支持的話，當支持改進時他會花一點時間來考慮一下PHP。</p>
<p>因為今天你已經可以下載到開發者版本的 PHP V6，你將看到一些功能函數已經支持Unicode字符串。有一個函數清單已經被測試和驗證了完全可以處理Unicode，參見資源。</p>
<p>命名空間</p>
<p>命名空間是一種避免因函數或者類之間的命名衝突而使你的函數和類以及方法無法讀取，而不使用前綴命名慣例的一種方法。因此，通過使用命名空間，你可以命名別人可能已經使用的類名，而不用擔心在運行時會出錯。表一提供了一個在PHP中使用命名空間的示例。</p>
<p>您不用在源代碼中做更新或更改，因為你寫的任何PHP代碼可以不包含命名空間而運行得很好。因為命名空間特性似乎會移植到PHP 5.3 X中，如果它可以使用，您可以在自己的程序中引用命名空間。</p>
<p><strong>表一，命名空間示例</strong></p>
<p>namespace NathanAGood;<br />
class XMLWriter<br />
{<br />
// Implementation here...<br />
}</p>
<p>$writer = new NathanAGood::XMLWriter();</p>
<p>?&gt;</p>
<p><strong>Web 2.0 特性</strong></p>
<p>依賴於你怎麼使用PHP和你現在腳本的是什麼樣子的，現在的語言和語法差異，可能會或者不會最大程度的影響下面一些特性，這是指那些直接讓你引用的Web 2.0功能到你的PHP應用程序。</p>
<p><strong>SOAP</strong></p>
<p>SOAP是一種網絡服務「說話」的協議，並且支持不少其他語言，例如Java和微軟的.NET,雖然有其他的方法來驅動和使用網絡服務，比如 表象化狀態轉變（Representational State Transfer ）REST，SOAP仍然在使不同平台具有可操作性中是最常用的。此外，SOAP在PHP擴展和PEAR庫中使用，SOAP在PHP中默認是不支持的，因此你啟用這個擴展或者叫你的ISP啟用。此外，PEAR包允許你建立SOAP客戶端和服務器，如SOAP包。</p>
<p>如果你改變了默認設置，SOAP將會在PHP 6中啟用。這個擴展將提供你很容易的的實現SOAP客戶端和SOAP服務，允許你編寫的應用提供使用或者網絡服務。</p>
<p>如果SOAP擴展是默認設置，那就意味著你不能在PHP中設置它們，如果您開發的PHP應用程序並且它們發佈到一個ISP服務器上，您可能需要檢查一下你的ISP，以驗證SOAP並啟用為他們升級。</p>
<p><strong>XML</strong></p>
<p>在PHP 5.1中XMLReader 和XMLWriter已經變成PHP核心的一部分，這使你工作起來更輕鬆如果在你的PHP程序中需要使用到XML的話。和SOAP擴展一樣，如果你使用SOAP或者XML這是個好消息因為PHP 6比已經出爐的PHP4 更適合你。</p>
<p><strong>被刪除的東西</strong></p>
<p>除了具有的一些新功能，PHP 6引擎將刪除一些在前面版本中已經有的功能。大部分這些功能，如register_globals 和safe_mode 在目前的PHP中被視為「破的」。因為他們可能會暴露一些安全風險。PHP在努力的清除中，在下一個版本中這些將從PHP中刪除或者廢棄。反對者認為大部分ISP或者企業會保留現在的腳本因為升級到PHP6會破壞現在的的腳本，但是支持者認為很高興看到PHP團隊修補了這些漏洞，並且提供了一個乾淨，安全的運行工具。</p>
<p><strong>將從PHP刪除的功能有：</strong></p>
<p>magic_quotes register_globals register_long_arrays safe_mode</p></div>


        <script src="https://utteranc.es/client.js"
        repo="abbychau/blog.abby.md"
        issue-term="pathname"
        label="blog comment"
        theme="github-dark"
        crossorigin="anonymous"
        async>
        </script>

        <div id="permalink" style='word-break: break-all;padding:2em 0 1em 0'>
            <a href="https://blog.abby.md/_generated/realblog_2010-06_16194.htm">Permalink of this blog</a>
            <a href="https://github.com/abbychau/blog.abby.md/blob/master/./original-data/realblog/2010-06/16194.md">Source</a>
        </div>
        
        <div id="homelink" style='word-break: break-all;padding:1em 0 2em 0;display: none;'>
            <a href="/">Abby's Archive</a>
        </div>  
    </div>
</body>

</html>